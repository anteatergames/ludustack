@model JobPositionViewModel
@{
    Layout = null;
    var limitMaxCharParam = 240;
    var needMore = limitMaxCharParam < Model.Description.Length;
    var limitMaxCharDescription = needMore ? limitMaxCharParam : Model.Description.Length;
}

<div class="col-12 box bg-white jobposition-item list-item" data-id="@Model.Id" data-currentuservote="@Model.CurrentUserApplied">
    <div class="box-header with-border">
        <a asp-area="work" asp-controller="jobposition" asp-action="details" asp-route-id="@Model.Id" class="btnViewJobPosition"><h2>@Model.Title</h2></a>
        <span>@SharedLocalizer["Posted on {0}", Model.CreateDate.ToString()]</span>
        <div class="box-tools">
            @if (Model.Permissions.CanEdit || Model.Permissions.CanDelete)
            {
                <div class="btn-group">
                    <button type="button" class="btn  btn-box-tool" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-ellipsis-v" aria-hidden="true"></i>
                    </button>
                    <div class="dropdown-menu dropdown-menu-right btn-sm p-1" x-placement="bottom-start" style="position: absolute; transform: translate3d(-67px, 28px, 0px); top: 0px; left: 0px; will-change: transform;">
                        @if (Model.Permissions.CanEdit)
                        {
                            <a class="btnEditJobPosition dropdown-item" href="#" data-url="@Url.Action("Edit", "JobPosition", new { area = "Work", jobPositionId = Model.Id })">@SharedLocalizer["edit"]</a>
                        }

                        @if (Model.Permissions.CanDelete)
                        {
                            <a class="btnDeleteJobPosition dropdown-item" href="#" data-url="@Url.Action("DeleteJobPosition", "JobPosition", new { area = "Work", jobPositionId = Model.Id })" data-confirmationmessage="@SharedLocalizer["Are you sure you want to delete this job position?"]" data-confirmationtitle="@SharedLocalizer["Are you sure?"]" data-confirmationbuttontext="@SharedLocalizer["Yes, delete it!"]" data-cancelbuttontext="@SharedLocalizer["Cancel"]">@SharedLocalizer["delete"]</a>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="box-body jobposition-details no-gutters">
        <div class="col-12">
            @if (Model.Remote)
            {
                <span class="badge badge-secondary mb-1 p-2 text-capitalize">@SharedLocalizer["remote"]</span>
            }
            @if (Model.Duration != JobPositionDuration.NotInformed)
            {
                <span class="badge badge-secondary mb-1 p-2">@SharedLocalizer[Model.Duration.ToDisplayName()]</span>
            }
            @if (Model.PositionType != JobPositonType.NotInformed)
            {
                <span class="badge badge-secondary mb-1 p-2">@SharedLocalizer[Model.PositionType.ToDisplayName()]</span>
            }
            @if (Model.ExperienceLevel != JobExperienceLevel.NotInformed)
            {
                <span class="badge badge-secondary mb-1 p-2">@SharedLocalizer[Model.ExperienceLevel.ToDisplayName()]</span>
            }
        </div>

        <div class="row p-1">
            <div class="col-12">
                @foreach (var benefit in Model.Benefits)
                {
                    if (benefit.Available)
                    {
                        <span class="btn border p-1 rounded-circle btn-icon-sm bg-label" title="@benefit.Benefit.ToUiInfo().Display"><i class="fas fa-@(benefit.Benefit.ToUiInfo().Class)" aria-hidden="true"></i></span>
                    }
                }
            </div>
        </div>
        <div class="col-12 mt-2">
            <p>
                @Html.Raw(Model.Description.Replace(Environment.NewLine, "<br />").Substring(0, limitMaxCharDescription))
                @if (needMore)
                {
                    <span>... <a asp-area="work" asp-controller="jobposition" asp-action="details" asp-route-id="@Model.Id" class="btnViewJobPosition btn btn-sm badge badge-info">@SharedLocalizer["read more"]</a></span>
                }
            </p>
        </div>
        <div class="col-12">
            <span class="badge badge-status badge-@(Model.Status.ToString().ToLower()) p-2">@Model.StatusLocalized</span>
            <span class="badge badge-status badge-dark p-2">@SharedLocalizer[Model.Language.ToDisplayName()]</span>
            @if (Model.Origin == JobPositionOrigin.External)
            {
                <span class="badge badge-status badge-success p-2 text-capitalize">@SharedLocalizer[Model.Origin.ToDisplayName().ToLower()]</span>
            }
        </div>

        <div class="col-12 text-lowercase text-right">
            @if (Model.CurrentUserApplied)
            {
                <span class="text-success" title="@SharedLocalizer["You have applied to this Job Position!"]"><i class="fas fa-check-circle" aria-hidden="true"></i></span>
            }
            @if (Model.Origin == JobPositionOrigin.Internal)
            {
                <span class="text-muted"><span class="comment-count">@Model.ApplicantCount</span> @(Model.ApplicantCount == 1 ? SharedLocalizer["applicant"] : SharedLocalizer["applicants"])</span>
            }
        </div>
    </div>
</div>
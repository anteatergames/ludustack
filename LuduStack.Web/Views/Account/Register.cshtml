@model MvcRegisterViewModel
@using Microsoft.Extensions.Options

@inject IOptions<ConfigOptions> ConfigOptions

@{
    ViewData["Title"] = SharedLocalizer["Register"];
    ViewData["Description"] = String.Format("{0} - {1}", SharedLocalizer["Register"], Constants.DefaultTitle);
    ViewData["CanonicalUrl"] = ViewData["BaseUrl"] + Url.Action("register", "account");
    Layout = "~/Views/Shared/_LayoutLoginRegister.cshtml";
}

<div class="register-box">
    <h1 class="sr-only">@ViewData["Title"]</h1>
    <div class="register-logo">
        <a asp-area="" asp-controller="account" asp-action="login">
            <span><img src="~/images/logo-black-360w.png" class="embed-responsive" alt=""></span>
        </a>
    </div>

    <div class="register-box-body">
        <p class="login-box-msg">@SharedLocalizer["Register a new membership"]</p>
        <span asp-validation-for="AcceptTerms" class="text-danger"></span>

        <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" id="frmRegister">
            <div class="form-group has-feedback">
                <input asp-for="UserName" type="text" class="form-control" placeholder="@SharedLocalizer["UserName"]">
                <span class="fas fa-user form-control-feedback "></span>
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group has-feedback">
                <input asp-for="Email" type="email" class="form-control" placeholder="@SharedLocalizer["Email"]">
                <span class="fas fa-at form-control-feedback "></span>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group has-feedback">
                <input asp-for="Password" type="password" class="form-control" placeholder="@SharedLocalizer["Password"]">
                <span class="fas fa-key form-control-feedback "></span>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group has-feedback">
                <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="@SharedLocalizer["Retype password"]">
                <span class="fas fa-key form-control-feedback "></span>
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="checkbox">
                        <input asp-for="AcceptTerms">
                        <label asp-for="AcceptTerms">@SharedLocalizer["I agree to the"] <strong><a asp-area="" asp-controller="home" asp-action="terms" target="_blank">@SharedLocalizer["terms"]</a></strong></label>
                    </div>
                </div>
                <div class="col-12 align-content-center">
                    <div class="g-recaptcha" data-sitekey="@ConfigOptions.Value.ReCaptchaSiteKey"></div>
                </div>
                <!-- /.col -->
                <div class="col-12 text-center text-capitalize">
                    <button type="submit" id="btnSubmitRegister" class="btn btn-info btn-block mt-2">@SharedLocalizer["Sign Up"]</button>
                </div>
                <!-- /.col -->
            </div>
        </form>

        <div class="mt-3 text-center">
            <p>@SharedLocalizer["Already have an account?"] <a asp-area="" asp-controller="account" asp-action="login" class="text-info m-l-5">@SharedLocalizer["SIGN IN"]</a></p>
            <p>@SharedLocalizer["Don't want to Register?"] <a asp-area="" asp-controller="home" asp-action="index" class="text-info m-l-5">@SharedLocalizer["Continue browsing"]</a></p>
        </div>
    </div>
    <!-- /.form-box -->
</div>
<!-- /.register-box -->

@section Scripts {
    <script src="~/js/shared/alertsystem.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        // extend jquery range validator to work for required checkboxes
        var defaultRangeValidator = $.validator.methods.range;
        $.validator.methods.range = function (value, element, param) {
            if (element.type === 'checkbox') {
                // if it's a checkbox return true if it is checked
                return element.checked;
            } else {
                // otherwise run the default validation function
                return defaultRangeValidator.call(this, value, element, param);
            }
        }

        $('#frmRegister').on('click', '#btnSubmitRegister', function (e) {
            //e.preventDefault();
            var form = $('#frmRegister');

            var aceito = $('#AcceptTerms').is(':checked');
            if (aceito === true) {
                if (form.valid()) {
                    form.submit();
                }
            }
            else {
                ALERTSYSTEM.ShowWarningMessage("@Html.Raw(SharedLocalizer["You need to accept the terms!"].ToString())");
            }

            return false;
        });
    </script>

    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
}
@model IPagination
@{
    Layout = null;

    var threshold = Constants.PagingThreshold;
}

<div class="d-flex flex-row">
    @if (Model.TotalPageCount > 1)
    {
        <nav aria-label="@SharedLocalizer[" Pagination"]">
            <ul class="pagination pagination-sm mb-2">
                @for (int i = 1; i <= Model.TotalPageCount; i++)
                {
                    var absDiff = Math.Abs(Model.Page - i);

                    if (absDiff <= threshold)
                    {
                        <li class="page-item@(i == Model.Page ? " active" : string.Empty)">
                            <a asp-protocol="@ViewData[" protocol"]" asp-host="@ViewData[" host"]" asp-area="@Model.Area" asp-controller="@Model.Controller" asp-action="@Model.Action" asp-route-page="@i" title="@SharedLocalizer[" Page {0}", i]" class="page-link text-center">@i</a>
                        </li>
                    }
                    else if(absDiff == (threshold + 1))
                    {
                        <li class="page-item">
                            <span class="page-link text-muted text-center">...</span>
                        </li>
                    }
                }
            </ul>
        </nav>
    }

    @if (!string.IsNullOrWhiteSpace(Model.PaginationMessage))
    {
        <div class="d-block pagination pagination-sm ml-auto mb-2">
            <span class="rounded page-link text-muted">@SharedLocalizer[Model.PaginationMessage, Model.TotalCount]</span>
        </div>
    }
</div>